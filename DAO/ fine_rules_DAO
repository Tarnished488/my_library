package my_library;

import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.mapping.List;
import org.hibernate.query.Query;

public class fine_rules_DAO {

    // 保存或更新一条记录
    public void saveOrUpdateFineRules(fine_rules fineRules) {
        Transaction transaction = null;
        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            transaction = session.beginTransaction();
            session.saveOrUpdate(fineRules);
            transaction.commit();
        } catch (Exception e) {
            if (transaction != null) {
                transaction.rollback();
            }
            e.printStackTrace();
        }
    }

    // 通过 damageFine（主键）查询记录
    public fine_rules getFineRulesByDamageFine(int damageFine) {
        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            return session.get(fine_rules.class, damageFine);
        }
    }

    // 获取所有记录
    public List getAllFineRules() {
        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            Query<fine_rules> query = session.createQuery("FROM FineRules", fine_rules.class);
            return (List) query.getResultList();
        }
    }

    // 删除记录
    public void deleteFineRules(fine_rules fineRules) {
        Transaction transaction = null;
        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            transaction = session.beginTransaction();
            session.delete(fineRules);
            transaction.commit();
        } catch (Exception e) {
            if (transaction != null) {
                transaction.rollback();
            }
            e.printStackTrace();
        }
    }
}
