package DAO;

import my_library.book_inside;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class Book_inside_DAO {
    private static final String URL = "jdbc:mysql://localhost:3306/your_db"; // 替换为实际数据库名
    private static final String USER = "your_user"; // 替换为实际用户名
    private static final String PASS = "your_pass"; // 替换为实际密码

    private Connection connect() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASS);
    }

    // 查询所有图书
    public List<book_inside> getAll() {
        List<book_inside> list = new ArrayList<>();
        String sql = "SELECT * FROM books_inside";

        try (Connection conn = connect();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {
                book_inside book = new book_inside(
                    rs.getString("title"),
                    rs.getDate("purchaseDay"),
                    rs.getFloat("price"),
                    rs.getString("version"),
                    rs.getString("author"),
                    rs.getInt("location"),
                    rs.getString("category"),
                    rs.getInt("periodOfValidity")
                );
                list.add(book);
            }
        } catch (SQLException e) {
            e.printStackTrace(); // 建议替换为日志记录
        }

        return list;
    }

    // 插入图书
    public void insert(book_inside book) {
        String sql = "INSERT INTO books_inside (title, purchaseDay, price, version, author, location, category, periodOfValidity) " +
                     "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

        try (Connection conn = connect();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, book.getTitle());
            ps.setDate(2, book.getPurchaseDay());
            ps.setFloat(3, book.getPrice());
            ps.setString(4, book.getVersion());
            ps.setString(5, book.getAuthor());
            ps.setInt(6, book.getLocation());
            ps.setString(7, book.getCategory());
            ps.setInt(8, book.getPeriodOfValidity());

            ps.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace(); // 建议替换为日志记录
        }
    }

    // 根据标题查找图书
    public book_inside getByTitle(String title) {
        String sql = "SELECT * FROM books_inside WHERE title = ?";
        try (Connection conn = connect();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, title);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                return new book_inside(
                    rs.getString("title"),
                    rs.getDate("purchaseDay"),
                    rs.getFloat("price"),
                    rs.getString("version"),
                    rs.getString("author"),
                    rs.getInt("location"),
                    rs.getString("category"),
                    rs.getInt("periodOfValidity")
                );
            }
        } catch (SQLException e) {
            e.printStackTrace(); // 建议替换为日志记录
        }
        return null;
    }

    // 删除图书（根据 Title）
    public void delete(String title) {
        String sql = "DELETE FROM books_inside WHERE title = ?";
        try (Connection conn = connect();
             PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setString(1, title);
            ps.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace(); // 建议替换为日志记录
        }
    }
}
